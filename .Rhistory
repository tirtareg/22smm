filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>% head(6) %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
update.packages(ask = F,checkBuilt = T)
library(rlang)
remove.packages("rlang", lib="~/R/win-library/4.1")
install.packages("rlang", dependencies = T)
install.packages("rlang", dependencies = T)
remove.packages("glue", lib="~/R/win-library/4.1")
install.packages("glue", dependencies = T)
remove.packages("xfun", lib="~/R/win-library/4.1")
install.packages("xfun", dependencies = T)
remove.packages("magrittr", lib="~/R/win-library/4.1")
install.packages("magrittr", dependencies = T)
remove.packages("fansi", lib="~/R/win-library/4.1")
install.packages("fansi", dependencies = T)
update.packages(ask = F, checkBuilt = T)
q()
library(matlib)
A <- matrix(sample(1:10,16,replace = T), ncol = 4)
A <- matrix(c(1,3,1,2,0,3,1,2,4), ncol = 3)
A
rank(A)
minor(A)
minor(A, 1, 1)
cofactor(A, 2, 3)
adjoint(A)
1/det(A)*adjoint(A)
solve(A)
dim(A)
nrow(A)
Minor <- function(A){
if (nrow(A) != ncol(A)) {
"Bukan Matriks Persegi"
} else {
m <- matrix(NA, ncol = ncol(A), nrow = nrow(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
m[i,j] <- minor(A, i, j)
}
}
m
}
}
Kofaktor <- function(A){
if (nrow(A) != ncol(A)) {
"Bukan Matriks Persegi"
} else {
m <- matrix(NA, ncol = ncol(A), nrow = nrow(A))
for (i in 1:nrow(A)) {
for (j in 1:ncol(A)) {
m[i,j] <- (-1)^(i+j)*minor(A, i, j)
}
}
m
}
}
Minor(A)
Kofaktor(A)
adjoint(A)
echelon(A)
R(A)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B
B
B <- matrix(c(2,1,1,-1-3,2,1,1,-1,6,-2,3), nrow = 3)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
c <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
Ginv(C)
Ginv(C, fractions = T)
Ginv(C, fractions = T) %*% C
Ginv(C, fractions = T) %*% C %*% Ginv(C, fractions = T)
C %*% Ginv(C, fractions = T) %*% C
echelon(C)
R(C)
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
echelon(C)
R(C)
Ginv(C, fractions = T)
G <- Ginv(C, fractions = T)
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)
R(A)
R(B)
C <- matrix(c(4,1,3,1,1,1,2,5,3), nrow = 3)
C
det(C)
echelon(C)
R(C)
G <- Ginv(C, fractions = T)
G
C %*% G %*% C
G <- matrix(c(0, 5/3, -1/3,
0, -2/3, 1/3,
0, 0, 0), nrow = 3)
C
C %*% G %*% C
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B, reduced = F)
echelon(B, reduced = F, fractions = T)
echelon(B, reduced = F)
echelon(B)
echelon(B, reduced = F) # matriks echelon baris
R(B)
A <- matrix(c(2, 1, -1,
-3, -1, 2,
-2, 1, 2), 3, 3, byrow=TRUE)
b <- c(8, -11, -3)
echelon(A, b, verbose=TRUE, fractions=TRUE) # reduced row-echelon form
echelon(A, b, reduced=FALSE, verbose=TRUE, fractions=TRUE) # row-echelon for
echelon(cbind(A, b))
echelon(cbind(A, b), reduced = F)
echelon(cbind(A, b), reduced = F, fractions = T)
echelon(cbind(A, b), reduced = F, fractions = T, verbose = T)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
echelon(A, reduced = F)
echelon(A, reduced = F, verbose = T)
echelon(A, reduced = F, verbose = T, fractions = T)
echelon(A, reduced = T, verbose = T, fractions = T)
A <- matrix(c(2,1,4,0,1,2,-4,-2,0,6,4,2), nrow = 3)
A
echelon(A)
B <- matrix(c(2,1,1,-1,-3,2,1,1,-1,6,-2,3), nrow = 3)
B
echelon(B)  # matriks echelon baris tereduksi
echelon(B, reduced = F) # matriks echelon baris
echelon(B, reduced = T, verbose = T)
echelon(B, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
A <- matrix(c(1-, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
A <- matrix(c(1-, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
A <- matrix(c(1-, 1, -1, 3, -3, 3, 5, -5, 5), nrow = 3)
A <- matrix(c(-1, 1, -1,
3, -3, 3,
5, -5, 5), nrow = 3)
echelon(A)
echelon(A)  # matriks echelon baris tereduksi
echelon(A, reduced = F) # matriks echelon baris
echelon(A, reduced = T, verbose = T, fractions = T) # matriks echelon baris tereduksi dan langkah2nya
R(B)
R(A)
vol-a <- 2
vol_a <- 2
2name_45 <- c(1:5)
name <- 4
2name <- 4
.nam <- 1
.name2 <- 3
.2name <- 3
_h <- 3
-h <- 45
vol-kubus <- 3
update.packages(ask = F, checkBuilt = T)
system()
Sys.Date()
Sys.info()
Sys.timezone()
q()
library(rlang)
remove.packages("rlang", lib="~/R/win-library/4.1")
install.packages("rlang", dependencies = T)
update.packages(ask = F, checkBuilt = T)
library(vctrs)
remove.packages("vctrs", lib="~/R/win-library/4.1")
install.packages("vctrs")
update.packages(ask = F, checkBuilt = T)
library(cli)
remove.packages("cli", lib="~/R/win-library/4.1")
install.packages("cli")
install.packages("cli")
library(dplyr)
remove.packages("dplyr", lib="~/R/win-library/4.1")
install.packages("dplyr", ask = F)
install.packages("dplyr", ask = F)
library(tibble)
remove.packages("tibble", lib="~/R/win-library/4.1")
install.packages("tibble")
install.packages("tibble")
update.packages(ask = F, checkBuilt = )
getwd()
setwd("C:\\Users\\LENOVO\\Documents")
a <- matrix(c(1, 2, 3,))
a <- matrix(c(1, 2, 3,
4, 5, 6), 2, 3)
a
b <- c(6, 7, 8)
rbind(a, b)
rbind(a, c(b))
update.packages(ask = F, checkBuilt = T)
remove.packages("xfun", lib="~/R/win-library/4.1")
install.pac
install.packages("xfun")
install.packages("xfun")
rbinom(30,5,0.05)
rbinom(30,5,0.5)
rbinom(30,20,0.5)
?rbinom
require(graphics)
# Compute P(45 < X < 55) for X Binomial(100,0.5)
sum(dbinom(46:54, 100, 0.5))
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
book1 <- read.csv("H:/My Drive/Tuton UT/2022.1/Komputer 1/Sesi 6/book1.csv", sep=";")
View(book1)
data_binomial <- matrix(rbinom(30, 20, 0.5),
nrow = 5,
ncol = 6)
data_binomial
.x <- seq(-4.275, 4.275, length=100)
.x
.x <- seq(-3, 3, length=100)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
.x <- seq(-1, 1, length=100)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
abline(h=0, col="black")
.x <- seq(-1, 1, length=100)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
abline(h=0, col="black")
.x <- seq(-2, 2, length=100)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
abline(h=0, col="black")
2
.x <- seq(-5, 5, length=100)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
abline(h=0, col="black")
.x <- seq(-1, 1, length=1000)
plot(.x, dnorm(.x, mean=0, sd=1), xlab="x", ylab="Kerapatan",
main=expression(paste("Distribusi Normal: ", mu, " = 0, ",
sigma, " = 1")), type="l")
library(saeme)
data(bmi)
#calculate SAE with measurement error
sae_me <- FHme(y = bmi$y, x = cbind(1, bmi$x), vardir = bmi$mse_y, C = cbind(0, bmi$mse_x))
sae_me <- FHme(y = y, x = cbind(1, x), vardir = mse_y, C = cbind(0, mse_x), data = bmi)
sae_me
summary(sae_me)
plot(sae_me)
update.packages(ask = F, checkBuilt = T)
update.packages(ask = F, checkBuilt = T)
library(remotes)
remotes::install_github("aminfathullah/saeme")
library(saeme)
data(bmi)
#calculate SAE with measurement error
sae_me <- FHme(y = bmi$y, x = cbind(1, bmi$x), vardir = bmi$mse_y, C = cbind(0, bmi$mse_x))
library(dplyr)
iris %>%
filter(Sepal.Length > 5 & Sepal.Width >3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length *  Petal.Width) %>%
group_by(Species) %>%
summarise(Sepal.Area = mean(Sepal.Area),
Petal.Area = mean(Petal.Area))
iris %>%
filter(Sepal.Length > 5 & Sepal.Width > 3) %>%
mutate(Sepal.Area = Sepal.Length * Sepal.Width,
Petal.Area = Petal.Length * Petal.Width) %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Area),
Mean.Petal.Area = mean(Petal.Area))
iris %>%
group_by(Species) %>%
summarise(Mean.Sepal.Area = mean(Sepal.Length * Sepal.Width),
Mean.Petal.Area = mean(Petal.Length *  Petal.Width))
?ungroup
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop)) %>%
ungroup()
install.packages("gapminder")
library(gapminder)
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop)) %>%
ungroup()
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop))
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop))
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop)) %>%
ungroup()
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop))
gapminder %>%
group_by(country) %>%
mutate(mn = pop/mean(pop))
gapminder %>%
group_by(country) %>%
summarise(mn = pop/mean(pop)) %>%
ungroup()
gapminder %>%
group_by(country) %>%
summarise(mn = pop/mean(pop))
gapminder %>%
group_by(country) %>%
summarise(mn = mean(pop))
gapminder %>%
group_by(country) %>%
summarise(mn = mean(pop)) %>%
ungroup()
names(gapminder)
summary(gapminder$year)
gapminder %>% filter(country == "Indonesia")
gapminder %>% group_by(country) %>% summarize(n = n())
gapminder %>% group_by(country) %>% mutate(n = n())
gapminder %>% group_by(country) %>% mutate(meanLE = mean(lifeExp))
tail(gapminder %>% group_by(country) %>% mutate(meanLE = mean(lifeExp)))
mtcars
mtcars |> filter(cyl == 4)
mtcars |> filter(mtcars$cyl == 4)
mtcars %>% filter(cyl == 4)
library(dplyr)
mtcars %>% filter(cyl == 4)
mtcars %>% filter(cyl == 6)
update.packages(ask = F, checkBuilt = T)
q()
#install.packages("matlib")
library(matlib)
A <- matrix(c(1,2,1,0,
2,-1,-1,1,
-3,-4,-1,2), ncol = 4,T)
A <- matrix(c(1,2,1,0,
2,-1,-1,1,
-3,-4,-1,2), ncol = 4, nrow = 3,T)
A
echelon(A)
#install.packages("matlib")
library(matlib)
A <- matrix(c(-3,5,1,0,
0,-1,1,0,
4,2,3,0), nrow=3,T)
A <- matrix(c(-3,5,1,0,
0,-1,1,0,
4,2,3,0), nrow=3,T, ncol =4)
A
echelon(A)
update.packages(ask = F, checkBuilt = T)
update.packages(ask = F, checkBuilt = T)
install.packages(c("htmltools", "MASS", "rlang", "sass"))
library(htmltools)
remove.packages("htmltools")
install.packages("htmltools", dependencies = T)
install.packages("htmltools", dependencies = T)
install.packages("htmltools")
update.packages(ask = F, checkBuilt = T)
#install.packages("matlib")
library(matlib)
A <- matrix(c(1,2,8,1), ncol = 2, byrow = T)
A
P <- matrix(c(1,1,2,-2), ncol = 2, byrow = T)
P %*% A %*% solve(P)
solve(P) %*% A %*% P
P <- matrix(c(1,1,-2,2), ncol = 2, byrow = T)
solve(P) %*% A %*% P
matrix(c(-3,2,-2,1), ncol = 2, byrow = T)
eigen(A)
A <- matrix(c(-3,2,-2,1), ncol = 2, byrow = T)
eigen(A)
A
Eigen(A)
setwd("G:/My Drive/#PMB/2022/03_SMMPTN/22smm")
library(readxl)
db <- read_excel("data.xlsx")
library(tidyverse)
library(tidyverse)
data <- db %>%
group_by(prodi) %>%
summarize(minat = max(peminat))
data <- db %>%
group_by(tahun_lulus, jk) %>%
summarise(n = n() ) %>%
pivot_wider(names_from = jk, values_from = n)
data
data <- db %>%
group_by(tahun_lulus, pilihan_prodi) %>%
summarise(n = n() ) %>%
pivot_wider(names_from = jk, values_from = n)
data <- db %>%
group_by(tahun_lulus, pilihan_prodi) %>%
summarise(n = n() ) %>%
pivot_wider(names_from = pilihan_prodi, values_from = n)
data
data <- db %>%
group_by(tahun_lulus, pilihan_prodi) %>%
summarise(n = n() ) %>%
pivot_wider(names_from = pilihan_prodi, values_from = n)
names(data) <- c("Tahun Lulus", "Pilihan 1", "Pilihan 2")
div(plot_ly(data, x = ~`Tahun Lulus`, y = ~`Pilihan 1`, type = 'bar', name = "Pilihan 1") %>%
add_trace(y = ~`Pilihan 2`, name = "Pilihan 2") %>%
layout(yaxis = list(title = ' '), barmode = 'group'), align = "center")
library(plotly)
library(shiny)
div(plot_ly(data, x = ~`Tahun Lulus`, y = ~`Pilihan 1`, type = 'bar', name = "Pilihan 1") %>%
add_trace(y = ~`Pilihan 2`, name = "Pilihan 2") %>%
layout(yaxis = list(title = ' '), barmode = 'group'), align = "center")
data <- read_excel("G:/My Drive/#PMB/2022/03_SMMPTN/Registrasi/Statistik_Keketatan_Prodi_smmptn_2022.xlsx")
data
data <- data[,-2]
names(data) <- c("No", "Program Studi", "Peminat", "Diterima", "Keketatan (%)",
"Peminat", "% Peminat", "Diterima", "% Diterima", "Peminat", "% Peminat",
"Diterima", "% Diterima")
kable(data, row.names = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 5, "Pilihan 1" = 4, "Pilihan 2" = 4))
library(kableExtra)
kable(data, row.names = F) %>%
kable_styling(bootstrap_options = "striped", full_width = F,
latex_options = "scale_down") %>%
add_header_above(c(" " = 5, "Pilihan 1" = 4, "Pilihan 2" = 4))
setwd("G:/My Drive/#PMB/2022/03_SMMPTN/22smm")
setwd("G:/My Drive/#PMB/2022/03_SMMPTN/22smm")
